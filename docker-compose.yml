services:
  app:
    build:
      context: .
      dockerfile: dockerfile
    container_name: app
    ports:
      - "${BACK_PORT}:${BACK_PORT}"
    env_file:
      - .env
    environment:
      BACK_HOST: ${BACK_HOST}
      BACK_PORT: ${BACK_PORT}
      PYTHONPATH: .
    depends_on:
      - database
    command: [
      "sh", "-c",
      "poetry run alembic upgrade head &&
      poetry run uvicorn
      src.app:app
      --host ${BACK_HOST}
      --port ${BACK_PORT}"
    ]

  database:
    image: postgres:14.4-alpine
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - "${DATABASE_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./postgres-data:/var/lib/postgresql/data